Planowałem napisać serię tutoriali o łączeniu Pythona z Javascriptem po staremu, ale skończy się na wprowadzeniu i jednym artykule. To nie ma sensu. Nikt tego nie potrzebuje w 2020 roku.


Gdy zaczynałem pisać wprowadzenie i ten pierwszy artykuł byłem niemal pewien, że jest cała masa ludzi którzy tak jak ja są starzy, całe życie tłukli zwyczajne aplikacje webowe i chcą powoli wejść w nowoczesność, żeby nie zostać jakoś strasznie z tyłu. Jak się przekonałem po kilku rozmowach to było bardzo, bardzo mylne wrażenie.
W 2020 roku nie ma już starych ludzi. Nikt już nie robi takich serwisów jak mój Brewlog, w szczególności zawodowo. Jest nowocześnie, reaktywnie, progresywnie i wielowarstwowo. A ci którzy tego nie robią siedzą cicho i nie chcą się wychylać.
Dlatego nie będę kontynuował tego cyklu. Wstyd i poruta. Oraz oczywiście szkoda na to czasu. Jak również jak się zastanowić to było bez sensu - wyrenderowany HTML z Javascriptem, który coś tam niby robił, ale właściwie nie musiał, bo można to wszystko było zrobić server-side. Czy to nie jest to co obecnie jest modne w Javascripcie, czyli Server Side Rendering?!
I dlatego też postanowiłem zrezygnować z półśrodków i jako projekt edukacyjny zacząłem robić mikroblog (aka klon Twittera) z backendem w Pythonie i frontem w Preact. Projekt jest publicznie dostępny na githubie i rozwija się powoli. Nie mam ram czasowych, ani nie narzuciłem sobie terminów osiągnięcia poszczególnych kamieni milowych. Być może nawet nigdy nie zostanie ukończony, ale jego natura jest właśnie edukacyjna - ma mi pomóc odświeżyć stack technologiczny w którym czuję się swobodnie.
W Javascripcie robiłem całkiem sporo, ale raczej dawno temu, gdy nikt jeszcze nie myślał o Vue czy React, a szczytem nowoczesności był Ember jedynka i wczesne wersje Angulara. W tamtych zamierzchłych czasach jak ktoś chciał mieć dobry framework w Javascripcie to raczej musiał go sobie napisać sam, i przy takim to kodzie właśnie pracowałem. Były to lata 2012-2013. Na szczęście mamy rok 2020 i Javascript zaczął wreszcie przypominać język programowania for humans i mam nadzieję że tak już zostanie.
A na razie zmierzam do pierwszego ważnego momentu w dziejach aplikacji, czyli autoryzacji użytkownika.